{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,SAAS,gBAAgB,CAAC,MACpC,EAAM,SAAS,gBAAgB,CAAC,MAEhC,EAAS,EAAI,GAAK,MAAM,CAAC,SAAC,CAAA,CAAK,CAAA,CAAM,CAA3C,SACE,AAAI,AAAU,IAAV,GAAe,IAAU,EAAI,MAAM,CAAG,EACjC,EAIP,EAAG,GAAA,MAAA,CADE,CAEL,CACE,KAAM,EAAK,QAAQ,CAAC,EAAE,CAAC,WAAW,CAClC,SAAU,EAAK,QAAQ,CAAC,EAAE,CAAC,WAAW,CACtC,IAAK,SAAS,EAAK,QAAQ,CAAC,EAAE,CAAC,WAAW,EAC1C,OAAQ,WAAW,EAAK,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,QAAS,IACnE,EACD,CACH,EAAG,EAAE,EAEC,EAAa,SAAC,CAApB,EACE,OAAQ,EAAE,MAAM,CAAC,SAAS,EACxB,IAAK,OACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,C,GACjD,KAEF,KAAK,WACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,QAAQ,CAAC,aAAa,CAAC,EAAE,QAAQ,C,GACzD,KAEF,KAAK,MACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,GAAG,CAAG,EAAE,GAAG,A,GACnC,KAEF,KAAK,SACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,EAE7C,CAEA,KAAO,EAAM,IAAI,CAAC,MAAM,CAAG,GACzB,EAAM,SAAS,CAAC,GAGlB,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAE7B,EAAS,EAAO,MAAM,CAAC,cAAc,CAAC,QAAS,CACnD,MAAO,WACP,SAAU,MACV,sBAAuB,EACvB,sBAAuB,CACzB,EAEA,CAAA,EAAI,SAAS,CAAI,eAET,MAAA,CADA,EAAO,IAAI,CAAC,qBAEZ,MAAA,CADA,EAAO,QAAQ,CAAC,qBAEhB,MAAA,CADA,EAAO,GAAG,CAAC,qBACJ,MAAA,CAAP,EAAO,eAGf,EAAM,YAAY,CAAC,EAAK,EAAM,gBAAgB,CAChD,EACF,EAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,EAAO,gBAAgB,CAAC,QAAS,EACnC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar headers = document.querySelectorAll(\"th\");\nvar trs = document.querySelectorAll(\"tr\");\nvar people = _to_consumable_array(trs).reduce(function(acc, item, index) {\n    if (index === 0 || index === trs.length - 1) return acc;\n    return _to_consumable_array(acc).concat([\n        {\n            name: item.children[0].textContent,\n            position: item.children[1].textContent,\n            age: parseInt(item.children[2].textContent),\n            salary: parseFloat(item.children[3].textContent.replace(/[$,]/g, \"\"))\n        }\n    ]);\n}, []);\nvar handleSort = function(e) {\n    switch(e.target.innerText){\n        case \"Name\":\n            people.sort(function(a, b) {\n                return a.name.localeCompare(b.name);\n            });\n            break;\n        case \"Position\":\n            people.sort(function(a, b) {\n                return a.position.localeCompare(b.position);\n            });\n            break;\n        case \"Age\":\n            people.sort(function(a, b) {\n                return a.age - b.age;\n            });\n            break;\n        case \"Salary\":\n            people.sort(function(a, b) {\n                return a.salary - b.salary;\n            });\n            break;\n    }\n    while(table.rows.length > 2)table.deleteRow(1);\n    people.forEach(function(person) {\n        var row = document.createElement(\"tr\");\n        var salary = person.salary.toLocaleString(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        });\n        row.innerHTML = \"\\n      <td>\".concat(person.name, \"</td>\\n      <td>\").concat(person.position, \"</td>\\n      <td>\").concat(person.age, \"</td>\\n      <td>\").concat(salary, \"</td>\\n    \");\n        table.insertBefore(row, table.lastElementChild);\n    });\n};\nheaders.forEach(function(header) {\n    header.addEventListener(\"click\", handleSort);\n});\n\n//# sourceMappingURL=index.91966766.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('th');\nconst trs = document.querySelectorAll('tr');\n\nconst people = [...trs].reduce((acc, item, index) => {\n  if (index === 0 || index === trs.length - 1) {\n    return acc;\n  }\n\n  return [\n    ...acc,\n    {\n      name: item.children[0].textContent,\n      position: item.children[1].textContent,\n      age: parseInt(item.children[2].textContent),\n      salary: parseFloat(item.children[3].textContent.replace(/[$,]/g, '')),\n    },\n  ];\n}, []);\n\nconst handleSort = (e) => {\n  switch (e.target.innerText) {\n    case 'Name':\n      people.sort((a, b) => a.name.localeCompare(b.name));\n      break;\n\n    case 'Position':\n      people.sort((a, b) => a.position.localeCompare(b.position));\n      break;\n\n    case 'Age':\n      people.sort((a, b) => a.age - b.age);\n      break;\n\n    case 'Salary':\n      people.sort((a, b) => a.salary - b.salary);\n      break;\n  }\n\n  while (table.rows.length > 2) {\n    table.deleteRow(1);\n  }\n\n  people.forEach((person) => {\n    const row = document.createElement('tr');\n\n    const salary = person.salary.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    });\n\n    row.innerHTML = `\n      <td>${person.name}</td>\n      <td>${person.position}</td>\n      <td>${person.age}</td>\n      <td>${salary}</td>\n    `;\n\n    table.insertBefore(row, table.lastElementChild);\n  });\n};\n\nheaders.forEach((header) => {\n  header.addEventListener('click', handleSort);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","headers","querySelectorAll","trs","people","reduce","acc","item","index","concat","children","textContent","position","age","parseInt","salary","parseFloat","replace","handleSort","e","target","innerText","sort","a","b","localeCompare","rows","deleteRow","forEach","person","row","createElement","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","innerHTML","insertBefore","lastElementChild","header","addEventListener"],"version":3,"file":"index.91966766.js.map"}